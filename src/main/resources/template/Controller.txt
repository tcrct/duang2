package ${basePackage}.controller.${entityVarName};

import com.duangframework.mvc.annotation.*;
import com.duangframework.mvc.core.BaseController;
import com.duangframework.vtor.annotation.*;
import com.duangframework.mvc.dto.SearchListDto;
import ${entityClassName};
import ${basePackage}.service.${entityVarName}.${entityName}Service;

/**
 *  ${entityName} 控制层
 *
 * @author duang
 * @since 1.0
 * @Date ${currentTime}
 */
@Controller
@Mapping(value = "${controllerMappingValue}", desc = "${controllerMappingDesc}")
public class ${entityName}Controller extends BaseController {

    @Import
    private ${entityName}Service ${entityVarName}Service;

    /**
     *  新增或编辑后，保存${entityName}对象
     *  根据${entityName}对象中的id字符进行判断执行insert或update
     * @param ${entityVarName} 实体对象
     * @since 1.0
     */
    @Mapping(value = "/save", desc = "保存")
    public ${entityName} save(${entityName} ${entityVarName}) {
        try {
            return ${entityVarName}Service.save(${entityVarName});
        } catch (Exception e) {
            throw new ServiceException(e.getMessage(), e);
        }
    }

    /**
     *  根据ID删除一条记录
     * @param id    符合DuangId规则的字符串
     * @resparam [{"name":"data","type":"Boolean","desc":"是否删除成功,true为成功"}]
     * @since 1.0
     */
    @Mapping(value = "/deletebyid", desc = "删除")
    public Boolean deleteById(@DuangId String id) {
        try {
            return ${entityVarName}Service.deleteById(id);
        } catch (Exception e) {
            throw new ServiceException(e.getMessage(), e);
        }
    }

    /**
     *  根据ID查找一条记录
     * @param id    符合DuangId规则的字符串
     * @since 1.0
     */
    @Mapping(value = "/findbyid", desc = "查找")
    public ${entityName} findById(@DuangId String id) {
        try {
            returnSuccessJson(${entityVarName}Service.findById(id));
        } catch (Exception e) {
            throw new ServiceException(e.getMessage(), e);
        }
    }

  /**
     *  根据搜索对象查询记录集合
     * @param searchListDto    搜索对象
     * @since 1.0
     */
    @Mapping(value = "/search", desc = "搜索")
    public PageDto<${entityName}> search(SearchListDto searchListDto) {
        try {
            return ${entityVarName}Service.search(searchListDto);
        } catch (Exception e) {
            throw new ServiceException(e.getMessage(), e);
        }
    }
}
